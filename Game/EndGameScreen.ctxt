#BlueJ class context
comment0.target=EndGameScreen
comment1.params=pause\ score
comment1.target=EndGameScreen(boolean,\ int)
comment1.text=\r\n\ Create\ an\ EndGameScreen\ which\ saves\ and\ displays\ your\ scores,\ as\ well\ as\ showing\ animated\ Actors\r\n
comment10.params=
comment10.target=void\ createDeadCharcter()
comment10.text=\r\n\ Creates\ an\ image\ of\ the\ character\ to\ look\ like\ he\ is\ dead.\r\n
comment11.params=
comment11.target=void\ flipEnemies()
comment11.text=\r\n\ Flips\ the\ sprites\ of\ enemies\ to\ give\ the\ illusion\ of\ movement\ \r\n
comment12.params=
comment12.target=void\ stopMusic()
comment12.text=\r\n\ Stops\ the\ music\ playing\r\n
comment13.params=
comment13.target=boolean\ isPlaying()
comment13.text=\r\n\ Gets\ the\ playing\ status\ of\ the\ music\r\n
comment14.params=
comment14.target=void\ startMusic()
comment14.text=\r\n\ Starts\ the\ music\ on\ loop\r\n
comment15.params=
comment15.target=java.lang.String[]\ readFile()
comment15.text=\r\n\ Reads\ the\ highscores\ stored\ in\ the\ local\ file\ and\ returns\ them\ as\ a\ String[10]\r\n
comment16.params=data\ newScore
comment16.target=int\ compareScore(java.lang.String[],\ int)
comment16.text=\r\n\ Takes\ a\ String[]\ of\ scores\ and\ a\ new\ score\ to\ compare,\ returning\ what\ position\ the\ new\ score\ is\ placed\r\n\ If\ not\ placed,\ returns\ -1\r\n
comment17.params=data\ newScore\ position
comment17.target=java.lang.String[]\ insertScore(java.lang.String[],\ java.lang.String,\ int)
comment17.text=\r\n\ Takes\ a\ String[]\ of\ scores,\ a\ new\ score\ to\ add,\ and\ the\ position\ to\ add\ it\ to\r\n\ Returns\ the\ new\ String[]\r\n
comment18.params=
comment18.target=java.lang.String\ askName()
comment18.text=\r\n\ Pops\ up\ a\ message\ box\ to\ the\ user\ asking\ for\ their\ name,\ returning\ it\ as\ a\ String\r\n
comment19.params=score
comment19.target=void\ saveScore(int)
comment19.text=\r\n\ Goes\ through\ the\ full\ process\ of\ reading\ the\ highscores\ file,\ comparing\ the\ new\ score\ against\ it,\ displaying\ the\ score\r\n\ and\ saving\ the\ updated\ highscore\ list\ to\ file\ (if\ necessar)\r\n
comment2.params=
comment2.target=void\ createBorder()
comment2.text=\r\n\ Add\ a\ border\ of\ TreeStumps\ around\ the\ edge\ of\ the\ screen\r\n
comment20.params=scores
comment20.target=void\ writeScoresToFile(java.lang.String[])
comment20.text=\r\n\ Takes\ a\ String[]\ of\ scores\ and\ writes\ it\ to\ the\ highscores\ file\r\n
comment21.params=name\ score\ position
comment21.target=void\ displayScore(java.lang.String,\ int,\ int)
comment21.text=\r\n\ Display\ the\ name,\ score,\ and\ position\ of\ the\ current\ run\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Animates\ the\ enemies/character\ on\ the\ endscreen,\ changing\ their\ sprites\ every\ 50\ frames\r\n
comment4.params=
comment4.target=void\ createEndGameScreen()
comment4.text=\r\n\ Adds\ a\ new\ EndGameScreen\ object\ to\ the\ world.\r\n
comment5.params=
comment5.target=void\ createEnemy()
comment5.text=\r\n\ Creates\ the\ enemies\ for\ the\ page.\r\n
comment6.params=
comment6.target=void\ createCharacter()
comment6.text=\r\n\ Creates\ the\ character\ for\ the\ page.\r\n
comment7.params=
comment7.target=void\ removeCharacter0()
comment7.text=\r\n\ Removes\ the\ character\ image\ from\ the\ page.\r\n
comment8.params=
comment8.target=void\ createMC()
comment8.text=\r\n\ Add\ music\ control\ so\ music\ can\ be\ muted\r\n
comment9.params=
comment9.target=void\ removeCharacter1()
comment9.text=\r\n\ Removes\ the\ character\ image\ from\ the\ page.\r\n
numComments=22
